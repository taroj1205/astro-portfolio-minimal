name: CI Pipeline

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CI_IGNORE: |
    *.md
    .gitignore
    .gitattributes
    .vscode/**

jobs:
  check_changes:
    name: Check Changes
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      exists: ${{ steps.filter.outputs.exists }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - id: filter
        shell: bash
        run: |
          # Determine the commit to diff against (push vs PR)
          if [[ "$GITHUB_EVENT_NAME" == "pull_request" ]]; then
            BASE_SHA="${{ github.event.pull_request.base.sha }}"
          else
            BASE_SHA="${{ github.event.before }}"
          fi
          # List changed files between BASE_SHA and current HEAD
          CHANGED=$(git diff --name-only "$BASE_SHA" "$GITHUB_SHA")
          # Identify ignored files based on CI_IGNORE patterns
          IGNORED=$(echo "$CHANGED" | git check-ignore --stdin --exclude-from=<(printf '%s\n' "$CI_IGNORE") || true)
          # Remove ignored files from the changed list
          FILTERED=$(comm -23 <(echo "$CHANGED" | sort) <(echo "$IGNORED" | sort))
          # Output result for downstream jobs
          if [[ -z "$FILTERED" ]]; then
            echo "exists=false" >> "$GITHUB_OUTPUT"
          else
            echo "exists=true" >> "$GITHUB_OUTPUT"
          fi

  quality_checks:
    name: ${{ matrix.name }}
    needs: [check_changes]
    if: ${{ needs.check_changes.outputs.exists == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - check: lint
            name: Lint
          - check: format
            name: Format
          - check: spell
            name: Spell Check
          - check: build
            name: Build
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        # if: steps.cache.outputs.cache-hit != 'true'
        run: bun install --frozen-lockfile

      - name: Run ${{ matrix.name }}
        run: bun run ${{ matrix.check }}

  verify:
    name: Verify
    needs: [check_changes, quality_checks]
    runs-on: ubuntu-latest
    if: always()
    outputs:
      success: ${{ steps.set-result.outputs.success }}
    steps:
      - name: Set Result
        id: set-result
        run: |
          # Check if changes exist but no jobs ran, or if any job failed or was cancelled
          if [[ "${{ needs.check_changes.outputs.exists }}" != "true" ]]; then
            echo "success=true" >> $GITHUB_OUTPUT
            echo "No relevant changes detected - pipeline passed"
          elif [[ "${{ contains(needs.*.result, 'failure') }}" == "true" || "${{ contains(needs.*.result, 'cancelled') }}" == "true" ]]; then
            echo "success=false" >> $GITHUB_OUTPUT
            echo "Pipeline failed - some jobs failed or were cancelled"
            exit 1
          else
            echo "success=true" >> $GITHUB_OUTPUT
            echo "All jobs completed successfully"
          fi
