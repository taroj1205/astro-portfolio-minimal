---
import type { ImageMetadata } from 'astro'
import { Image as AstroImage } from 'astro:assets'
import {
  buildSizes,
  computeResponsiveWidths,
  DEFAULT_WIDTHS,
  type SizesPreset,
} from '../../utils/image'

interface Props {
  src: ImageMetadata
  alt: string
  sizes?: string
  sizesPreset?: SizesPreset
  widths?: number[]
  class?: string
  loading?: 'lazy' | 'eager'
  decoding?: 'async' | 'auto' | 'sync'
  fetchpriority?: 'high' | 'low' | 'auto'
}

const {
  src,
  alt,
  sizes,
  sizesPreset = 'content',
  widths,
  class: className,
  loading = 'lazy',
  decoding = 'async',
  fetchpriority,
  ...rest
} = Astro.props as Props

const intrinsicWidth = src.width
const computedWidths = computeResponsiveWidths(
  intrinsicWidth,
  widths ?? DEFAULT_WIDTHS
)
const computedSizes =
  sizes ?? buildSizes(sizesPreset, Math.min(1200, intrinsicWidth))
const computedFetchPriority =
  fetchpriority ?? (loading === 'eager' ? 'high' : 'auto')
---

<AstroImage
  src={src}
  alt={alt}
  widths={computedWidths}
  sizes={computedSizes}
  class={className}
  loading={loading}
  decoding={decoding}
  fetchpriority={computedFetchPriority}
  {...rest}
/>
